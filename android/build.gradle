plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.github.reline.jisho'
    compileSdk 33
    defaultConfig {
        applicationId "com.github.reline.jisho"
        minSdk 23
        targetSdk 33
        versionCode 4
        versionName "1.2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "DATABASE_FILE_NAME", "\"${databaseFileName}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
        }
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions "environment"
    productFlavors {
        mock {
            dimension "environment"
            applicationIdSuffix ".mock"
            versionNameSuffix "-mock"
        }
        prod {
            dimension "environment"
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name == 'release' && names.contains("mock")) {
            // Gradle ignores any variants that satisfy the conditions above.
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lint {
        abortOnError false
    }
}

configurations {
    compile.exclude group: 'stax'
    compile.exclude group: 'xpp3'
}
//
//kapt {
//    correctErrorTypes true
//}

//tasks.withType(org.jetbrains.kotlin.gradle.tasks.KaptGenerateStubs).configureEach {
//    kotlinOptions {
//        jvmTarget = "1.8"
//    }
//}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation "androidx.test:core:1.3.0"
    testImplementation "org.robolectric:robolectric:4.4"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':common')
    implementation 'com.github.reline:sqlitecopyopenhelper:0.1.0'
    implementation "app.cash.sqldelight:android-driver:$sqldelight_version"
    implementation "androidx.sqlite:sqlite-ktx:$sqlite_version"
    implementation "androidx.sqlite:sqlite-framework:$sqlite_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    implementation "com.squareup.okio:okio:$okio_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
}

def assetsDir = "$projectDir/src/main/assets"
task createAssetsDirectory {
    mkdir assetsDir
}
