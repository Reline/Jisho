version: 2.1
jobs:
  sql_test:
    docker:
      - image: circleci/openjdk:8-buster-node
    steps:
      - checkout
      - run:
          name: Tests for common module
          command: ./gradlew :common:test
  prepopulator_test:
    docker:
      - image: circleci/openjdk:8-buster-node
    steps:
      - run:
          name: Tests for prepopulator
          command: ./gradlew :prepopulator:test
  android_test:
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - run:
          name: Android Tests
          command: ./gradlew :android:test
  build_artifacts:
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - run:
          name: Prepare Dictionaries
          command: ./gradlew :prepopulator:prepareDictionaries
      - run:
          name: Build Prepopulator
          command: ./gradlew :prepopulator:shadowJar
      - run:
          name: Populate Database
          command: java -jar prepopulator/build/libs/prepopulator-all.jar && mv prepopulator/build/jisho.sqlite android/src/main/assets/
      - run:
          name: Build APK
          command: ./gradlew :android:assemble
      - store_artifacts:
          path: android/build/outputs/apk/release
          destination: circleci/apk
      - store_artifacts:
          path: android/src/main/assets/jisho.sqlite
          destination: circleci/database/jisho.sqlite
workflows:
  pull_request:
    jobs:
      - sql_test
      - prepopulator_test
      - android_test
  build:
    jobs:
      - sql_test
      - prepopulator_test
      - android_test
      - build_artifacts:
          requires:
            - sql_test
            - prepopulator_test
            - android_test
          filters:
            branches:
              only:
                - master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - sql_test
      - prepopulator_test
      - android_test