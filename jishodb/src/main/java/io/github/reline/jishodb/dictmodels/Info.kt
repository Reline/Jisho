/*
 * Copyright 2017 Nathaniel Reline
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.reline.jishodb.dictmodels

/**
 * The following entity codes are used for common elements within the
various information fields.
 */
object Info {

    val ENTITIES = hashMapOf(
            Pair("MA", "martial arts term"),
            Pair("X", "rude or X-rated term (not displayed in educational software)"),
            Pair("abbr", "abbreviation"),
            Pair("adj-i", "adjective (keiyoushi)"),
            Pair("adj-ix", "adjective (keiyoushi) - yoi/ii class"),
            Pair("adj-na", "adjectival nouns or quasi-adjectives (keiyodoshi)"),
            Pair("adj-no", "nouns which may take the genitive case particle `no'"),
            Pair("adj-pn", "pre-noun adjectival (rentaishi)"),
            Pair("adj-t", "`taru' adjective"),
            Pair("adj-f", "noun or verb acting prenominally"),
            Pair("adv", "adverb (fukushi)"),
            Pair("adv-to", "adverb taking the `to' particle"),
            Pair("arch", "archaism"),
            Pair("ateji", "ateji (phonetic) reading"),
            Pair("aux", "auxiliary"),
            Pair("aux-v", "auxiliary verb"),
            Pair("aux-adj", "auxiliary adjective"),
            Pair("Buddh", "Buddhist term"),
            Pair("chem", "chemistry term"),
            Pair("chn", "children's language"),
            Pair("col", "colloquialism"),
            Pair("comp", "computer terminology"),
            Pair("conj", "conjunction"),
            Pair("cop-da", "copula"),
            Pair("ctr", "counter"),
            Pair("derog", "derogatory"),
            Pair("eK", "exclusively kanji"),
            Pair("ek", "exclusively kana"),
            Pair("exp", "expressions (phrases, clauses, etc.)"),
            Pair("fam", "familiar language"),
            Pair("fem", "female term or language"),
            Pair("food", "food term"),
            Pair("geom", "geometry term"),
            Pair("gikun", "gikun (meaning as reading) or jukujikun (special kanji reading)"),
            Pair("hon", "honorific or respectful (sonkeigo) language"),
            Pair("hum", "humble (kenjougo) language"),
            Pair("iK", "word containing irregular kanji usage"),
            Pair("id", "idiomatic expression"),
            Pair("ik", "word containing irregular kana usage"),
            Pair("int", "interjection (kandoushi)"),
            Pair("io", "irregular okurigana usage"),
            Pair("iv", "irregular verb"),
            Pair("ling", "linguistics terminology"),
            Pair("m-sl", "manga slang"),
            Pair("male", "male term or language"),
            Pair("male-sl", "male slang"),
            Pair("math", "mathematics"),
            Pair("mil", "military"),
            Pair("n", "noun (common) (futsuumeishi)"),
            Pair("n-adv", "adverbial noun (fukushitekimeishi)"),
            Pair("n-suf", "noun, used as a suffix"),
            Pair("n-pref", "noun, used as a prefix"),
            Pair("n-t", "noun (temporal) (jisoumeishi)"),
            Pair("num", "numeric"),
            Pair("oK", "word containing out-dated kanji"),
            Pair("obs", "obsolete term"),
            Pair("obsc", "obscure term"),
            Pair("ok", "out-dated or obsolete kana usage"),
            Pair("oik", "old or irregular kana form"),
            Pair("on-mim", "onomatopoeic or mimetic word"),
            Pair("pn", "pronoun"),
            Pair("poet", "poetical term"),
            Pair("pol", "polite (teineigo) language"),
            Pair("pref", "prefix"),
            Pair("proverb", "proverb"),
            Pair("prt", "particle"),
            Pair("physics", "physics terminology"),
            Pair("rare", "rare"),
            Pair("sens", "sensitive"),
            Pair("sl", "slang"),
            Pair("suf", "suffix"),
            Pair("uK", "word usually written using kanji alone"),
            Pair("uk", "word usually written using kana alone"),
            Pair("unc", "unclassified"),
            Pair("yoji", "yojijukugo"),
            Pair("v1", "Ichidan verb"),
            Pair("v1-s", "Ichidan verb - kureru special class"),
            Pair("v2a-s", "Nidan verb with 'u' ending (archaic)"),
            Pair("v4h", "Yodan verb with `hu/fu' ending (archaic)"),
            Pair("v4r", "Yodan verb with `ru' ending (archaic)"),
            Pair("v5aru", "Godan verb - -aru special class"),
            Pair("v5b", "Godan verb with `bu' ending"),
            Pair("v5g", "Godan verb with `gu' ending"),
            Pair("v5k", "Godan verb with `ku' ending"),
            Pair("v5k-s", "Godan verb - Iku/Yuku special class"),
            Pair("v5m", "Godan verb with `mu' ending"),
            Pair("v5n", "Godan verb with `nu' ending"),
            Pair("v5r", "Godan verb with `ru' ending"),
            Pair("v5r-i", "Godan verb with `ru' ending (irregular verb)"),
            Pair("v5s", "Godan verb with `su' ending"),
            Pair("v5t", "Godan verb with `tsu' ending"),
            Pair("v5u", "Godan verb with `u' ending"),
            Pair("v5u-s", "Godan verb with `u' ending (special class)"),
            Pair("v5uru", "Godan verb - Uru old class verb (old form of Eru)"),
            Pair("vz", "Ichidan verb - zuru verb (alternative form of -jiru verbs)"),
            Pair("vi", "intransitive verb"),
            Pair("vk", "Kuru verb - special class"),
            Pair("vn", "irregular nu verb"),
            Pair("vr", "irregular ru verb, plain form ends with -ri"),
            Pair("vs", "noun or participle which takes the aux. verb suru"),
            Pair("vs-c", "su verb - precursor to the modern suru"),
            Pair("vs-s", "suru verb - special class"),
            Pair("vs-i", "suru verb - irregular"),
            Pair("kyb", "Kyoto-ben"),
            Pair("osb", "Osaka-ben"),
            Pair("ksb", "Kansai-ben"),
            Pair("ktb", "Kantou-ben"),
            Pair("tsb", "Tosa-ben"),
            Pair("thb", "Touhoku-ben"),
            Pair("tsug", "Tsugaru-ben"),
            Pair("kyu", "Kyuushuu-ben"),
            Pair("rkb", "Ryuukyuu-ben"),
            Pair("nab", "Nagano-ben"),
            Pair("hob", "Hokkaido-ben"),
            Pair("vt", "transitive verb"),
            Pair("vulg", "vulgar expression or word"),
            Pair("adj-kari", "`kari' adjective (archaic)"),
            Pair("adj-ku", "`ku' adjective (archaic)"),
            Pair("adj-shiku", "`shiku' adjective (archaic)"),
            Pair("adj-nari", "archaic/formal form of na-adjective"),
            Pair("n-pr", "proper noun"),
            Pair("v-unspec", "verb unspecified"),
            Pair("v4k", "Yodan verb with `ku' ending (archaic)"),
            Pair("v4g", "Yodan verb with `gu' ending (archaic)"),
            Pair("v4s", "Yodan verb with `su' ending (archaic)"),
            Pair("v4t", "Yodan verb with `tsu' ending (archaic)"),
            Pair("v4n", "Yodan verb with `nu' ending (archaic)"),
            Pair("v4b", "Yodan verb with `bu' ending (archaic)"),
            Pair("v4m", "Yodan verb with `mu' ending (archaic)"),
            Pair("v2k-k", "Nidan verb (upper class) with `ku' ending (archaic)"),
            Pair("v2g-k", "Nidan verb (upper class) with `gu' ending (archaic)"),
            Pair("v2t-k", "Nidan verb (upper class) with `tsu' ending (archaic)"),
            Pair("v2d-k", "Nidan verb (upper class) with `dzu' ending (archaic)"),
            Pair("v2h-k", "Nidan verb (upper class) with `hu/fu' ending (archaic)"),
            Pair("v2b-k", "Nidan verb (upper class) with `bu' ending (archaic)"),
            Pair("v2m-k", "Nidan verb (upper class) with `mu' ending (archaic)"),
            Pair("v2y-k", "Nidan verb (upper class) with `yu' ending (archaic)"),
            Pair("v2r-k", "Nidan verb (upper class) with `ru' ending (archaic)"),
            Pair("v2k-s", "Nidan verb (lower class) with `ku' ending (archaic)"),
            Pair("v2g-s", "Nidan verb (lower class) with `gu' ending (archaic)"),
            Pair("v2s-s", "Nidan verb (lower class) with `su' ending (archaic)"),
            Pair("v2z-s", "Nidan verb (lower class) with `zu' ending (archaic)"),
            Pair("v2t-s", "Nidan verb (lower class) with `tsu' ending (archaic)"),
            Pair("v2d-s", "Nidan verb (lower class) with `dzu' ending (archaic)"),
            Pair("v2n-s", "Nidan verb (lower class) with `nu' ending (archaic)"),
            Pair("v2h-s", "Nidan verb (lower class) with `hu/fu' ending (archaic)"),
            Pair("v2b-s", "Nidan verb (lower class) with `bu' ending (archaic)"),
            Pair("v2m-s", "Nidan verb (lower class) with `mu' ending (archaic)"),
            Pair("v2y-s", "Nidan verb (lower class) with `yu' ending (archaic)"),
            Pair("v2r-s", "Nidan verb (lower class) with `ru' ending (archaic)"),
            Pair("v2w-s", "Nidan verb (lower class) with `u' ending and `we' conjugation (archaic)"),
            Pair("archit", "architecture term"),
            Pair("astron", "astronomy, etc. term"),
            Pair("baseb", "baseball term"),
            Pair("biol", "biology term"),
            Pair("bot", "botany term"),
            Pair("bus", "business term"),
            Pair("econ", "economics term"),
            Pair("engr", "engineering term"),
            Pair("finc", "finance term"),
            Pair("geol", "geology, etc. term"),
            Pair("law", "law, etc. term"),
            Pair("mahj", "mahjong term"),
            Pair("med", "medicine, etc. term"),
            Pair("music", "music term"),
            Pair("Shinto", "Shinto term"),
            Pair("shogi", "shogi term"),
            Pair("sports", "sports term"),
            Pair("sumo", "sumo term"),
            Pair("zool", "zoology term"),
            Pair("joc", "jocular, humorous term"),
            Pair("anat", "anatomical term"))

    fun get(entity: String): String {
        return ENTITIES[entity] ?: ""
    }
}