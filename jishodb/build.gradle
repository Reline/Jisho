group 'com.github.reline'
version '1.0-SNAPSHOT'

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

repositories {
    jcenter()
    mavenCentral()
}

configurations {
    compile.exclude group: 'stax'
    compile.exclude group: 'xpp3'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    runtimeClasspath files(compileKotlin.destinationDir)
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.xerial:sqlite-jdbc:3.21.0.1'
    implementation 'com.tickaroo.tikxml:annotation:0.8.13'
    implementation 'com.tickaroo.tikxml:core:0.8.13'
    kapt 'com.tickaroo.tikxml:processor:0.8.13'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task unzipDictionaries {
    doLast {
        def outputDir = "$buildDir/dict"
        def directory = new File(outputDir)
        directory.mkdir()

        print("Inflating dictionary sources...") // http://ftp.monash.edu/pub/nihongo/
        def dictResourcesDir = new File("$projectDir/src/main/res/dict")

        def dictZips = dictResourcesDir.listFiles(new FilenameFilter() {
            @Override
            boolean accept(File dir, String name) {
                return name.endsWith(".zip")
            }
        })
        for (zip in dictZips) {
            copy {
                from zipTree(zip)
                into outputDir
            }
        }

        def dictGunZips = dictResourcesDir.listFiles(new FilenameFilter() {
            @Override
            boolean accept(File dir, String name) {
                return name.endsWith(".gz")
            }
        })
        for (gunZip in dictGunZips) {
            def filename = gunZip.name
            def basename = filename.take(filename.lastIndexOf('.'))
            file("$outputDir/${basename}.xml").withOutputStream { os ->
                os << resources.gzip(gunZip.path).read()
            }
        }
        println "Done"

        print("Converting files to proper UTF-8 format...") // https://github.com/nurse/nkf
        // FIXME: change the encoding during the unzipping process from GBK to UTF-8
        // https://stackoverflow.com/questions/33535594/converting-utf8-to-gb2312-in-java
        println("Done")
    }
}
// unzip dictionaries after building
build.finalizedBy(unzipDictionaries)